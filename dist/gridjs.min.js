/**
 * gridjs - Provides a dynamic data structure for storage and access of entities within a grid structure.
 * @version 0.0.1
 * @link https://github.com/tvdavies/gridjs
 * @copyright Copyright (c) 2016 Tom Davies
 * @license https://github.com/tvdavies/gridjs/raw/master/LICENSE.md
 */
!function(n,e){if("function"==typeof define&&define.amd)define(["exports"],e);else if("undefined"!=typeof exports)e(exports);else{var r={exports:{}};e(r.exports),n.gridjs=r.exports}}(this,function(n){"use strict";function e(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function r(n){return Object.keys(n).map(function(e){return n[e]})}function t(n){var e={};return n&&"[object Function]"===e.toString.call(n)}function u(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){var e=16*Math.random()|0,r="x"==n?e:3&e|8;return r.toString(16)})}function o(n){return[s,l,f,a,h,p,x,b,d,N,m].includes(n)}function i(n){return n&&n instanceof g}function c(){function n(n,e){var r=n.length>0?n[n.length-1]:null,t=e.length>0?e[e.length-1]:null,u=new g(r,t,R);return null!==r&&(r.nextInRow=u),null!==t&&(t.netInCol=u),y[u.id]=u,n.push(u),e.push(u),u}function e(n,e){i(n)?e(n):"string"==typeof n&&Object.keys(y).includes(n)?e(y[n]):Array.isArray(n)&&2===n.length?v(n[0],n[1],!1,function(n){return e(n)}):e(w(n))}function u(n,e,r){if(n!==e)switch(r){case s:return!0;case l:return e===n.prevInRow;case f:return e===n.prevInRow;case a:return e.rowNumber===n.rowNumber-1;case h:return e.rowNumber===n.rowNumber;case p:return e.rowNumber===n.rowNumber+1;case x:return e===n.prevInCol;case b:return e===n.nextInCol;case m:return e.colNumber===n.colNumber-1;case N:return e.colNumber===n.colNumber;case d:return e.colNumber===n.colNumber+1}return!1}function c(n,e){return r(y).filter(function(r){return u(n,r,e)})}function v(e,r,u,o){var i=!1;if(u){1===e&&0===E.length&&1===r&&0===_.length&&(E.push([]),_.push([]),n(E[0],_[0]),i=!0);for(var c=E.length;c<e;c++)O(),i=!0;for(var s=_.length;s<r;s++)j(),i=!0}E.length>=e&&E[e-1].length>=r?t(o)&&o(E[e-1][r-1],i):t(o)&&o(null,i)}function w(n){return r(y).find(function(e){return e.userObject===n})||null}function O(){var e=[];_.forEach(function(r){return n(e,r)}),E.push(e)}function j(){var e=[];E.forEach(function(r){return n(r,e)}),_.push(e)}function C(n,e){var r=n.userObject;n.userObject=e,t(R.userObjectChanged)&&R.userObjectChanged(e,r,n.rowNumber,n.colNumber,n.properties,n.id)}var R=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],y={},E=[],_=[],I={};return I.publish=function(n,r,u,i){e(n,function(s){if(null===s)throw new Error("Cannot publish message without a valid source");e(r,function(e){null!==e?t(R.entityMessageReceived)&&R.entityMessageReceived(u,i,e.userObject,e.properties,e.id):o(r)&&c(n,r).forEach(function(e){return I.publish(n,e,u,i)})})})},I.find=function(n,e){if(t(n)&&t(e)){var u=r(y).find(function(e){return n(e.userObject,e.properties,e.id)});u&&e(u.userObject,u.rowNumber,u.colNumber,u.properties,u.id)}},I.exists=function(n,e,r){t(r)&&v(n,e,!1,function(n){return r(null!==n)})},I.get=function(n,e,r){t(r)&&v(n,e,!1,function(n){var e=n?n.userObject:null,t=n?n.properties:null;r(e,t)})},I.set=function(n,e,r){v(n,e,!0,function(n,e){r&&C(n,r),e&&t(R.entityAdded)&&R.entityAdded(n.rowNumber,n.colNumber,n.properties,n.id)})},I.move=function(n,e,r,t){v(n,e,!1,function(n){if(null===n)throw new Error("Source must exist within grid");v(r,t,!0,function(e){var r=n.userObject;C(n,null),C(e,r)})})},I.getRowCount=function(){return E.length},I.getColumnCount=function(){return _.length},I}Object.defineProperty(n,"__esModule",{value:!0});var s="ALL",l="PREV_IN_ROW",f="NEXT_IN_ROW",a="PREV_ROW",h="ROW",p="NEXT_ROW",x="PREV_IN_COL",b="NEXT_IN_COL",d="PREV_COL",N="COL",m="NEXT_COL",g=function v(n,r,t){e(this,v),this.id=u(),this.rowNumber=n?n.rowNumber+1:1,this.colNumber=r?r.colNumber+1:1,this.prevInRow=n,this.prevInCol=r,this.properties={},this.userObject=null,this.options=t};n.createGrid=c});
//# sourceMappingURL=gridjs.min.js.map
