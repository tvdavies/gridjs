/**
 * gridjs - Provides a dynamic data structure for storage and access of entities within a grid structure.
 * @version 0.0.1
 * @link https://github.com/tvdavies/gridjs
 * @copyright Copyright (c) 2016 Tom Davies
 * @license https://github.com/tvdavies/gridjs/raw/master/LICENSE.md
 */
!function(e,n){if("function"==typeof define&&define.amd)define(["exports"],n);else if("undefined"!=typeof exports)n(exports);else{var r={exports:{}};n(r.exports),e.gridjs=r.exports}}(this,function(e){"use strict";function n(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function r(e){return Object.keys(e).map(function(n){return e[n]})}function t(e){var n={};return e&&"[object Function]"===n.toString.call(e)}function u(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var n=16*Math.random()|0,r="x"==e?n:3&n|8;return r.toString(16)})}function o(e){return[s,l,f,a,h,x,p,b,g,d,w].includes(e)}function i(e){return e&&e instanceof N}function c(){function e(e,n){var r=e.length>0?e[e.length-1]:null,t=n.length>0?n[n.length-1]:null,u=new N(r,t,R);return null!==r&&(r.nextInRow=u),null!==t&&(t.netInCol=u),j[u.id]=u,e.push(u),n.push(u),u}function n(e,n){i(e)?n(e):"string"==typeof e&&Object.keys(j).includes(e)?n(j[e]):Array.isArray(e)&&2===e.length?m(e[0],e[1],!1,function(e){return n(e)}):n(v(e))}function u(e,n,r){if(e!==n)switch(r){case s:return!0;case l:return n===e.prevInRow;case f:return n===e.prevInRow;case a:return n.rowNumber===e.rowNumber-1;case h:return n.rowNumber===e.rowNumber;case x:return n.rowNumber===e.rowNumber+1;case p:return n===e.prevInCol;case b:return n===e.nextInCol;case w:return n.colNumber===e.colNumber-1;case d:return n.colNumber===e.colNumber;case g:return n.colNumber===e.colNumber+1}return!1}function c(e,n){return r(j).filter(function(r){return u(e,r,n)})}function m(n,r,u,o){var i=!1;if(u){1===n&&0===E.length&&1===r&&0===I.length&&(E.push([]),I.push([]),e(E[0],I[0]),i=!0);for(var c=E.length;c<n;c++)O(),i=!0;for(var s=I.length;s<r;s++)y(),i=!0}console.log("rowIdx = "+(n-1)+", rows.length = "+E.length),console.log("colIdx = "+(r-1)+", rows[row - 1].length = "+E[n-1].length),E.length>=n&&E[n-1].length>=r?t(o)&&o(E[n-1][r-1],i):t(o)&&o(null,i)}function v(e){return r(j).find(function(n){return n.userObject===e})||null}function O(){var n=[];I.forEach(function(r){return e(n,r)}),E.push(n)}function y(){var n=[];E.forEach(function(r){return e(r,n)}),I.push(n)}function C(e,n){var r=e.userObject;e.userObject=n,t(R.userObjectChanged)&&R.userObjectChanged(n,r,e.rowNumber,e.colNumber,e.properties,e.id)}var R=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],j={},E=[],I=[],_={};return _.publish=function(e,r,u,i){n(e,function(s){if(null===s)throw new Error("Cannot publish message without a valid source");n(r,function(n){null!==n?t(R.entityMessageReceived)&&R.entityMessageReceived(u,i,n.userObject,n.properties,n.id):o(r)&&c(e,r).forEach(function(n){return _.publish(e,n,u,i)})})})},_.find=function(e){return t(e)?r(j).filter(function(n){return e(n.userObject,n.properties,n.id)}):[]},_.get=function(e,n,r){t(r)&&m(e,n,!1,function(e){return r(e.userObject,e.properties)})},_.set=function(e,n,r){console.log("setting entity"),console.log(e+", "+n),m(e,n,!0,function(e,n){r&&C(e,r),n&&t(R.entityAdded)&&R.entityAdded(e.rowNumber,e.colNumber,e.properties,e.id)})},_.move=function(e,n,r,t){m(e,n,!1,function(e){if(null===e)throw new Error("Source must exist within grid");m(r,t,!0,function(n){var r=e.userObject;C(e,null),C(n,r)})})},_.getRowCount=function(){return E.length},_.getColumnCount=function(){return I.length},_}Object.defineProperty(e,"__esModule",{value:!0});var s="ALL",l="PREV_IN_ROW",f="NEXT_IN_ROW",a="PREV_ROW",h="ROW",x="NEXT_ROW",p="PREV_IN_COL",b="NEXT_IN_COL",g="PREV_COL",d="COL",w="NEXT_COL",N=function m(e,r,t){n(this,m),this.id=u(),this.rowNumber=e?e.rowNumber+1:1,this.colNumber=r?r.colNumber+1:1,this.prevInRow=e,this.prevInCol=r,this.properties={},this.userObject=null,this.options=t,console.log("Entity at "+this.rowNumber+", "+this.colNumber)};e.createGrid=c});
//# sourceMappingURL=gridjs.min.js.map
